---
// Destructure the properties from Astro.props
const { title, url, variant = "default" } = Astro.props;
// Define TypeScript interface for the properties
interface Props {
  title?: string;
  url?: string;
  variant?: "default" | "big";
}
// Define CSS classes for styling the button
const baseClasses =
  "group inline-flex items-center justify-center text-center rounded-md text-white ring-zinc-500 transition duration-300 focus-visible:ring-3 outline-hidden";
const borderClasses = "border border-transparent";
const bgColorClasses =
  "bg-brand-green hover:bg-brand-green-dark active:bg-brand-green-dark";
const disableClasses = "disabled:pointer-events-none disabled:opacity-50";
const sizeClasses = variant === "big" 
  ? "px-[25px] py-[20px] text-[20px] font-semibold min-w-[260px]" 
  : "px-5 py-[15px] text-base font-normal";
const ringClasses = "dark:ring-zinc-200";
---

<!-- Link styled as a button, with dynamic title and URL -->
<a
  class={`${baseClasses} ${borderClasses} ${bgColorClasses} ${disableClasses} ${sizeClasses} ${ringClasses}`}
  href={url}
>
  {title}
</a>
