---
// Import SecondaryCTA component for use in this module
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import Icon from "@components/ui/icons/Icon.astro";
import BaseList from "@components/ui/lists/BaseList.astro";
import ListItem from "@components/ui/lists/ListItem.astro";
import SectionHeading from "@components/ui/typography/SectionHeading.astro";
import SubHeading from "@components/ui/typography/SubHeading.astro";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import demoBg from "@images/demo_bg.png";

// Define props from Astro
const { pricing } = Astro.props;

// Define TypeScript type for products.
type Plan = {
  name: string;
  price: string;
  billingFrequency: string;
  description: string;
  features: string[];
  isFeatured?: boolean;
  purchaseBtnTitle: string;
  purchaseLink: string;
};

interface PricingData {
  title: string;
  subTitle?: string;
  plans: Plan[];
}

interface Props {
  pricing: PricingData;
}

interface PricingSectionProps {
  title: string;
  subTitle: string;
  badge: string;
  thirdOption: string;
  btnText: string;
  pricing: {
    title: string;
    subTitle: string;
    standard: Product;
    plus: Product;
  };
}
---

<section class="bg-white pt-20 pb-[105px]">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="mx-auto max-w-2xl text-center">
      <SectionHeading>
        {pricing.title}
      </SectionHeading>
    </div>

    <div class="mx-auto mt-16 grid grid-cols-1 gap-8 lg:grid-cols-3">
      {
        pricing.plans.map((plan, index) => (
          <div class={`overflow-hidden rounded-lg ${index < 2 ? 'bg-white border border-[#7CA02F]' : 'bg-white ring-1 ring-neutral-200'}`}>
            <div class="px-6 pt-[54px] pb-6">
              <SubHeading variant="default" class="text-center text-[32px] mb-[30px]">
                {plan.name}
              </SubHeading>
            </div>
            <div class="bg-[#98B64B]">
              <div class="min-h-[120px] flex flex-col justify-center text-center" style={index < 2 ? `background-image: url(${demoBg.src}); background-repeat: no-repeat; background-position: center;` : ''}>                
                <div class="inline-block">
                    <span class="text-5xl lg:text-[4rem] font-bold tracking-tight text-white">
                        {plan.price}
                    </span>
                    <span class="text-xl lg:text-[2rem] font-semibold text-white">
                        {plan.billingFrequency}
                    </span>
                </div>
                <p class="text-xs text-white/90 inline-block lg:mr-[30%]">
                    plus applicable sales taxes
                </p>
              </div>                                        
            </div>
            <div class="px-6 pt-12 pb-[69px]">
                <div class="text-center lg:text-left">
                    {plan.description && (
                        <p class="text-base font-bold mb-2">
                        {plan.description}
                        </p>
                    )}
                    <BaseList variant="checked" class="space-y-1 font-semibold text-left inline-block">
                        {plan.features.map((feature) => (
                        <ListItem>{feature}</ListItem>
                        ))}
                    </BaseList>
                </div>            
            </div>
          </div>
        ))
      }

      <!-- Custom Plan -->
      <div class="overflow-hidden rounded-lg bg-white border border-[#7CA02F]">
        <div class="px-6 pt-[54px] pb-6">
          <SubHeading variant="default" class="text-center text-[32px] mb-[30px]">
            Custom
          </SubHeading>
        </div>
        <div class="min-h-[120px] flex justify-center items-center">
          <SecondaryCTA url="/contact" title="Contact us" variant="big" />
        </div>
        <div class="px-6 pt-12 pb-[69px] text-center lg:text-left">
          <BaseList variant="checked" class="space-y-1 font-semibold text-left inline-block">
            {[
              "Large transaction volume support",
              "Custom integrations and workflows",
              "Customized server setup",
              "White label option",
              "Individual support",
              "Dedicated account manager",
              "API access for custom development",
              "Advanced security features",
              "Bulk processing capabilities"
            ].map((feature) => (
              <ListItem>{feature}</ListItem>
            ))}
          </BaseList>
        </div>
      </div>
    </div>
  </div>
</section>
